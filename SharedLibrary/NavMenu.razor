<div class="top-row pl-4 navbar navbar-dark">
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="()=>ToggleNavMenu()" href=""     Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        @foreach (var item in menuLinks)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="() => item.Expanded = !item.Expanded">
                    <span class="oi oi-menu" aria-hidden="true"></span> @item.Name
                </NavLink>
            </li>
            @if (item.Expanded)
            {
                @foreach (var subItem in item.Items)
                {
                    <li class="nav-item px-4" @onclick="ToggleNavMenu">
                        <NavLink class="nav-link" href="@subItem.Href">
                            <span class="oi oi-plus" aria-hidden="true"></span> @subItem.Name
                        </NavLink>
                    </li>
                }
            }
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    ExpandMenu[] menuLinks = Array.Empty<ExpandMenu>();


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        InitLinks();
    }

    private void InitLinks(){
        menuLinks = new []{
            new ExpandMenu{
                Name="Telerik",
                Items = new []{
                    new SubMenu{
                        Name="Grid Pagination",
                        Href="telerik-grid-pagination"
                    },
                    new SubMenu{
                        Name="Grid Virtualization",
                        Href="telerik-grid-virtualization"
                    },
                    new SubMenu{
                        Name="Grid Hierarchy",
                        Href="telerik-grid-hierarchy"
                    },
                    new SubMenu{
                        Name="Tree Grid Pagination",
                        Href="telerik-tree-grid-pagination"
                    },
                    new SubMenu{
                        Name="Charts",
                        Href="telerik-charts"
                    },
                }
            },
            new ExpandMenu{
                Name="Syncfusion",
                Items = new []{
                    new SubMenu{
                        Name="Grid Pagination",
                        Href="syncfusion-grid-pagination"
                    },
                    new SubMenu{
                        Name="Grid Virtualization",
                        Href="syncfusion-grid-virtualization"
                    },
                    new SubMenu{
                        Name="Grid Hierarchy",
                        Href="syncfusion-grid-hierarchy"
                    },
                    new SubMenu{
                        Name="Tree Grid Pagination",
                        Href="syncfusion-tree-grid-pagination"
                    },
                    new SubMenu{
                        Name="Tree Grid Virt.",
                        Href="syncfusion-tree-grid-virtualization"
                    },
                    new SubMenu{
                        Name="Charts",
                        Href="syncfusion-charts"
                    },
                }
            },
            new ExpandMenu(){
                Name="ComponentOne/GrapeCity",
                Items = new []{
                    new SubMenu{
                        Name="Grid Pagination",
                        Href="grapecity-grid-pagination"
                    },
                    new SubMenu{
                        Name="Grid Virtualization",
                        Href="grapecity-grid-virtualization"
                    },
                    new SubMenu{
                        Name="Grid Hierarchy",
                        Href="grapecity-grid-hierarchy"
                    },
                    new SubMenu{
                        Name="Charts",
                        Href="grapecity-charts"
                    },
                }
            },
        };
    }
    

    class ExpandMenu{
        public string Name { get; set; }
        public bool Expanded { get; set; }
        public SubMenu[] Items { get; set; }
    }

    class SubMenu{
        public string Name { get; set; }
        public string Href { get; set; }
    }
}

